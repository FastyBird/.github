name: "PHP Code Tests"

on:
  workflow_call:
    inputs:
      run:
        required: false
        type: string
        default: "make tests"

      php:
        required: false
        type: string
        default: "8.2"

      php-extensions:
        required: false
        type: string
        default: "json, intl, :php-psr"

      composer:
        required: false
        type: string
        default: "composer install --no-interaction --no-progress --prefer-dist"

      mysql:
        required: false
        type: boolean
        default: true

      redis:
        required: false
        type: boolean
        default: false

env:
  COMPOSER_AUTH: '{"github-oauth": {"github.com": "${{ secrets.ORGANIZATION_ACCESS_TOKEN }}"}}'

jobs:
  tests:
    name: "Code Tests (PHP ${{ inputs.php }})"
    runs-on: "${{ matrix.operating-system }}"

    strategy:
      fail-fast: false
      matrix:
        operating-system: [ "ubuntu-latest" ]

    services:
      redis:
        image: ${{ (inputs.redis == true) && 'redis:latest' || '' }}
        ports:
          - 6379:6379

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v4"

      - name: "PHP"
        uses: "fastybird/.github/.github/actions/setup-php@main"
        with:
          php: "${{ inputs.php }}"
          extensions: "${{ inputs.php-extensions }}"

      - name: "Setup MySQL"
        if: ${{ inputs.mysql == true }}
        uses: "mirromutth/mysql-action@v1.1"
        with:
          mysql version: "5.7"
          mysql database: "testdb"
          mysql root password: "root"

      - name: "Composer"
        uses: "fastybird/.github/.github/actions/setup-composer@main"
        with:
          command: "${{ inputs.composer }}"

      - name: "Setup problem matchers for PHPUnit"
        shell: "bash"
        run: 'echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"'

      - name: "Tests"
        run: "${{ inputs.run }}"

      - name: "Upload logs"
        uses: "actions/upload-artifact@v3"
        with:
          name: "Logs - Tests (${{ matrix.operating-system }}, ${{ inputs.php }})"
          path: "var/log"
          if-no-files-found: "ignore"
